{"ast":null,"code":"import PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, useClassNamesOnNode } from '../../lib';\n/**\r\n * A component that allows to manage classNames on a DOM node in declarative manner.\r\n *\r\n * @deprecated This component is deprecated and will be removed in next major release.\r\n */\n\nfunction MountNode(props) {\n  useClassNamesOnNode(props.node, props.className); // A workaround for `react-docgen`: https://github.com/reactjs/react-docgen/issues/336\n\n  if (process.env.NODE_ENV === 'test') {\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n  /* istanbul ignore next */\n\n\n  return null;\n}\n\nMountNode.handledProps = [\"className\", \"node\"];\nMountNode.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The DOM node where we will apply class names. Defaults to document.body. */\n  node: PropTypes.oneOfType([customPropTypes.domNode, customPropTypes.refObject])\n} : {};\nexport default MountNode;","map":{"version":3,"sources":["C:/Users/aaron/Documents/lyncovid19-frontend-vercel/node_modules/semantic-ui-react/dist/es/addons/MountNode/MountNode.js"],"names":["PropTypes","React","customPropTypes","useClassNamesOnNode","MountNode","props","node","className","process","env","NODE_ENV","createElement","handledProps","propTypes","string","oneOfType","domNode","refObject"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,mBAA1B,QAAqD,WAArD;AACA;;;;;;AAMA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxBF,EAAAA,mBAAmB,CAACE,KAAK,CAACC,IAAP,EAAaD,KAAK,CAACE,SAAnB,CAAnB,CADwB,CAC0B;;AAElD,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA7B,EAAqC;AACnC,WAAO,aAAaT,KAAK,CAACU,aAAN,CAAoB,KAApB,EAA2B,IAA3B,CAApB;AACD;AACD;;;AAGA,SAAO,IAAP;AACD;;AAEDP,SAAS,CAACQ,YAAV,GAAyB,CAAC,WAAD,EAAc,MAAd,CAAzB;AACAR,SAAS,CAACS,SAAV,GAAsBL,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC5D;AACAH,EAAAA,SAAS,EAAEP,SAAS,CAACc,MAFuC;;AAI5D;AACAR,EAAAA,IAAI,EAAEN,SAAS,CAACe,SAAV,CAAoB,CAACb,eAAe,CAACc,OAAjB,EAA0Bd,eAAe,CAACe,SAA1C,CAApB;AALsD,CAAxC,GAMlB,EANJ;AAOA,eAAeb,SAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { customPropTypes, useClassNamesOnNode } from '../../lib';\r\n/**\r\n * A component that allows to manage classNames on a DOM node in declarative manner.\r\n *\r\n * @deprecated This component is deprecated and will be removed in next major release.\r\n */\r\n\r\nfunction MountNode(props) {\r\n  useClassNamesOnNode(props.node, props.className); // A workaround for `react-docgen`: https://github.com/reactjs/react-docgen/issues/336\r\n\r\n  if (process.env.NODE_ENV === 'test') {\r\n    return /*#__PURE__*/React.createElement(\"div\", null);\r\n  }\r\n  /* istanbul ignore next */\r\n\r\n\r\n  return null;\r\n}\r\n\r\nMountNode.handledProps = [\"className\", \"node\"];\r\nMountNode.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** The DOM node where we will apply class names. Defaults to document.body. */\r\n  node: PropTypes.oneOfType([customPropTypes.domNode, customPropTypes.refObject])\r\n} : {};\r\nexport default MountNode;"]},"metadata":{},"sourceType":"module"}