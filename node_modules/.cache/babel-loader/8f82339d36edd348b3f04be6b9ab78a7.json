{"ast":null,"code":"'use strict';\n\nmodule.exports = r;\nr.displayName = 'r';\nr.aliases = [];\n\nfunction r(Prism) {\n  Prism.languages.r = {\n    comment: /#.*/,\n    string: {\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'percent-operator': {\n      // Includes user-defined operators\n      // and %%, %*%, %/%, %in%, %o%, %x%\n      pattern: /%[^%\\s]*%/,\n      alias: 'operator'\n    },\n    boolean: /\\b(?:TRUE|FALSE)\\b/,\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\n    number: [/\\b(?:NaN|Inf)\\b/, /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/],\n    keyword: /\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n    punctuation: /[(){}\\[\\],;]/\n  };\n}","map":{"version":3,"sources":["C:/Users/aaron/Documents/lyncovid19-frontend-vercel/node_modules/refractor/lang/r.js"],"names":["module","exports","r","displayName","aliases","Prism","languages","comment","string","pattern","greedy","alias","boolean","ellipsis","number","keyword","operator","punctuation"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,CAAjB;AACAA,CAAC,CAACC,WAAF,GAAgB,GAAhB;AACAD,CAAC,CAACE,OAAF,GAAY,EAAZ;;AACA,SAASF,CAAT,CAAWG,KAAX,EAAkB;AAChBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,CAAhB,GAAoB;AAClBK,IAAAA,OAAO,EAAE,KADS;AAElBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,kCADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KAFU;AAMlB,wBAAoB;AAClB;AACA;AACAD,MAAAA,OAAO,EAAE,WAHS;AAIlBE,MAAAA,KAAK,EAAE;AAJW,KANF;AAYlBC,IAAAA,OAAO,EAAE,oBAZS;AAalBC,IAAAA,QAAQ,EAAE,gBAbQ;AAclBC,IAAAA,MAAM,EAAE,CACN,iBADM,EAEN,2EAFM,CAdU;AAkBlBC,IAAAA,OAAO,EAAE,gHAlBS;AAmBlBC,IAAAA,QAAQ,EAAE,oDAnBQ;AAoBlBC,IAAAA,WAAW,EAAE;AApBK,GAApB;AAsBD","sourcesContent":["'use strict'\r\n\r\nmodule.exports = r\r\nr.displayName = 'r'\r\nr.aliases = []\r\nfunction r(Prism) {\r\n  Prism.languages.r = {\r\n    comment: /#.*/,\r\n    string: {\r\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      greedy: true\r\n    },\r\n    'percent-operator': {\r\n      // Includes user-defined operators\r\n      // and %%, %*%, %/%, %in%, %o%, %x%\r\n      pattern: /%[^%\\s]*%/,\r\n      alias: 'operator'\r\n    },\r\n    boolean: /\\b(?:TRUE|FALSE)\\b/,\r\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\r\n    number: [\r\n      /\\b(?:NaN|Inf)\\b/,\r\n      /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\r\n    ],\r\n    keyword: /\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,\r\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\r\n    punctuation: /[(){}\\[\\],;]/\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}