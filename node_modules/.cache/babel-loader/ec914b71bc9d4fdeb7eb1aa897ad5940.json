{"ast":null,"code":"'use strict';\n\nmodule.exports = tap;\ntap.displayName = 'tap';\ntap.aliases = [];\n\nfunction tap(Prism) {\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[^\\S\\r\\n]*)---(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?[^\\S\\r\\n]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/aaron/Documents/final-final-lyncovid-frontend/new-lynbrook-frontend/node_modules/refractor/lang/tap.js"],"names":["module","exports","tap","displayName","aliases","Prism","languages","fail","pass","pragma","bailout","version","plan","subtest","pattern","greedy","punctuation","directive","yamlish","lookbehind","inside","yaml","alias"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,GAAjB;AACAA,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,EAAd;;AACA,SAASF,GAAT,CAAaG,KAAb,EAAoB;AAClBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,GAAhB,GAAsB;AACpBK,IAAAA,IAAI,EAAE,kBADc;AAEpBC,IAAAA,IAAI,EAAE,cAFc;AAGpBC,IAAAA,MAAM,EAAE,mBAHY;AAIpBC,IAAAA,OAAO,EAAE,cAJW;AAKpBC,IAAAA,OAAO,EAAE,kBALW;AAMpBC,IAAAA,IAAI,EAAE,sBANc;AAOpBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,oBADF;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAPW;AAWpBC,IAAAA,WAAW,EAAE,MAXO;AAYpBC,IAAAA,SAAS,EAAE,KAZS;AAapBC,IAAAA,OAAO,EAAE;AACPJ,MAAAA,OAAO,EAAE,oEADF;AAEPK,MAAAA,UAAU,EAAE,IAFL;AAGPC,MAAAA,MAAM,EAAEf,KAAK,CAACC,SAAN,CAAgBe,IAHjB;AAIPC,MAAAA,KAAK,EAAE;AAJA;AAbW,GAAtB;AAoBD","sourcesContent":["'use strict'\r\n\r\nmodule.exports = tap\r\ntap.displayName = 'tap'\r\ntap.aliases = []\r\nfunction tap(Prism) {\r\n  Prism.languages.tap = {\r\n    fail: /not ok[^#{\\n\\r]*/,\r\n    pass: /ok[^#{\\n\\r]*/,\r\n    pragma: /pragma [+-][a-z]+/,\r\n    bailout: /bail out!.*/i,\r\n    version: /TAP version \\d+/i,\r\n    plan: /\\d+\\.\\.\\d+(?: +#.*)?/,\r\n    subtest: {\r\n      pattern: /# Subtest(?:: .*)?/,\r\n      greedy: true\r\n    },\r\n    punctuation: /[{}]/,\r\n    directive: /#.*/,\r\n    yamlish: {\r\n      pattern: /(^[^\\S\\r\\n]*)---(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?[^\\S\\r\\n]*\\.\\.\\.$/m,\r\n      lookbehind: true,\r\n      inside: Prism.languages.yaml,\r\n      alias: 'language-yaml'\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}