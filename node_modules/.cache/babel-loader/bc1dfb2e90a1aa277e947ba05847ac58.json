{"ast":null,"code":"'use strict';\n\nmodule.exports = json;\njson.displayName = 'json';\njson.aliases = [];\n\nfunction json(Prism) {\n  Prism.languages.json = {\n    property: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n      greedy: true\n    },\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    number: /-?\\d+\\.?\\d*(e[+-]?\\d+)?/i,\n    punctuation: /[{}[\\],]/,\n    operator: /:/,\n    boolean: /\\b(?:true|false)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/aaron/Documents/final-final-lyncovid-frontend/new-lynbrook-frontend/node_modules/refractor/lang/json.js"],"names":["module","exports","json","displayName","aliases","Prism","languages","property","pattern","greedy","string","comment","number","punctuation","operator","boolean","null","alias"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AACAA,IAAI,CAACC,WAAL,GAAmB,MAAnB;AACAD,IAAI,CAACE,OAAL,GAAe,EAAf;;AACA,SAASF,IAAT,CAAcG,KAAd,EAAqB;AACnBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,IAAhB,GAAuB;AACrBK,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EAAE,+BADD;AAERC,MAAAA,MAAM,EAAE;AAFA,KADW;AAKrBC,IAAAA,MAAM,EAAE;AACNF,MAAAA,OAAO,EAAE,+BADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KALa;AASrBE,IAAAA,OAAO,EAAE,+BATY;AAUrBC,IAAAA,MAAM,EAAE,0BAVa;AAWrBC,IAAAA,WAAW,EAAE,UAXQ;AAYrBC,IAAAA,QAAQ,EAAE,GAZW;AAarBC,IAAAA,OAAO,EAAE,oBAbY;AAcrBC,IAAAA,IAAI,EAAE;AACJR,MAAAA,OAAO,EAAE,UADL;AAEJS,MAAAA,KAAK,EAAE;AAFH;AAde,GAAvB;AAmBD","sourcesContent":["'use strict'\r\n\r\nmodule.exports = json\r\njson.displayName = 'json'\r\njson.aliases = []\r\nfunction json(Prism) {\r\n  Prism.languages.json = {\r\n    property: {\r\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\r\n      greedy: true\r\n    },\r\n    string: {\r\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\r\n      greedy: true\r\n    },\r\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n    number: /-?\\d+\\.?\\d*(e[+-]?\\d+)?/i,\r\n    punctuation: /[{}[\\],]/,\r\n    operator: /:/,\r\n    boolean: /\\b(?:true|false)\\b/,\r\n    null: {\r\n      pattern: /\\bnull\\b/,\r\n      alias: 'keyword'\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}