{"ast":null,"code":"'use strict';\n\nmodule.exports = smalltalk;\nsmalltalk.displayName = 'smalltalk';\nsmalltalk.aliases = [];\n\nfunction smalltalk(Prism) {\n  Prism.languages.smalltalk = {\n    comment: /\"(?:\"\"|[^\"])*\"/,\n    string: /'(?:''|[^'])*'/,\n    symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n    'block-arguments': {\n      pattern: /(\\[\\s*):[^\\[|]*\\|/,\n      lookbehind: true,\n      inside: {\n        variable: /:[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    'temporary-variables': {\n      pattern: /\\|[^|]+\\|/,\n      inside: {\n        variable: /[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    keyword: /\\b(?:nil|true|false|self|super|new)\\b/,\n    character: {\n      pattern: /\\$./,\n      alias: 'string'\n    },\n    number: [/\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/, /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/],\n    operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n    punctuation: /[.;:?\\[\\](){}]/\n  };\n}","map":{"version":3,"sources":["C:/Users/aaron/Documents/lyncovid19-frontend-vercel/node_modules/refractor/lang/smalltalk.js"],"names":["module","exports","smalltalk","displayName","aliases","Prism","languages","comment","string","symbol","pattern","lookbehind","inside","variable","punctuation","keyword","character","alias","number","operator"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;AACAA,SAAS,CAACC,WAAV,GAAwB,WAAxB;AACAD,SAAS,CAACE,OAAV,GAAoB,EAApB;;AACA,SAASF,SAAT,CAAmBG,KAAnB,EAA0B;AACxBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,SAAhB,GAA4B;AAC1BK,IAAAA,OAAO,EAAE,gBADiB;AAE1BC,IAAAA,MAAM,EAAE,gBAFkB;AAG1BC,IAAAA,MAAM,EAAE,mDAHkB;AAI1B,uBAAmB;AACjBC,MAAAA,OAAO,EAAE,mBADQ;AAEjBC,MAAAA,UAAU,EAAE,IAFK;AAGjBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE,YADJ;AAENC,QAAAA,WAAW,EAAE;AAFP;AAHS,KAJO;AAY1B,2BAAuB;AACrBJ,MAAAA,OAAO,EAAE,WADY;AAErBE,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE,WADJ;AAENC,QAAAA,WAAW,EAAE;AAFP;AAFa,KAZG;AAmB1BC,IAAAA,OAAO,EAAE,uCAnBiB;AAoB1BC,IAAAA,SAAS,EAAE;AACTN,MAAAA,OAAO,EAAE,KADA;AAETO,MAAAA,KAAK,EAAE;AAFE,KApBe;AAwB1BC,IAAAA,MAAM,EAAE,CACN,0CADM,EAEN,4BAFM,CAxBkB;AA4B1BC,IAAAA,QAAQ,EAAE,gDA5BgB;AA6B1BL,IAAAA,WAAW,EAAE;AA7Ba,GAA5B;AA+BD","sourcesContent":["'use strict'\r\n\r\nmodule.exports = smalltalk\r\nsmalltalk.displayName = 'smalltalk'\r\nsmalltalk.aliases = []\r\nfunction smalltalk(Prism) {\r\n  Prism.languages.smalltalk = {\r\n    comment: /\"(?:\"\"|[^\"])*\"/,\r\n    string: /'(?:''|[^'])*'/,\r\n    symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\r\n    'block-arguments': {\r\n      pattern: /(\\[\\s*):[^\\[|]*\\|/,\r\n      lookbehind: true,\r\n      inside: {\r\n        variable: /:[\\da-z]+/i,\r\n        punctuation: /\\|/\r\n      }\r\n    },\r\n    'temporary-variables': {\r\n      pattern: /\\|[^|]+\\|/,\r\n      inside: {\r\n        variable: /[\\da-z]+/i,\r\n        punctuation: /\\|/\r\n      }\r\n    },\r\n    keyword: /\\b(?:nil|true|false|self|super|new)\\b/,\r\n    character: {\r\n      pattern: /\\$./,\r\n      alias: 'string'\r\n    },\r\n    number: [\r\n      /\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,\r\n      /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/\r\n    ],\r\n    operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\r\n    punctuation: /[.;:?\\[\\](){}]/\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}