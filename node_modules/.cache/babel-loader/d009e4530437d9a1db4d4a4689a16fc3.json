{"ast":null,"code":"'use strict';\n\nvar refractorMarkupTemplating = require('./markup-templating.js');\n\nmodule.exports = handlebars;\nhandlebars.displayName = 'handlebars';\nhandlebars.aliases = [];\n\nfunction handlebars(Prism) {\n  Prism.register(refractorMarkupTemplating);\n\n  (function (Prism) {\n    Prism.languages.handlebars = {\n      comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n      delimiter: {\n        pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      boolean: /\\b(?:true|false)\\b/,\n      block: {\n        pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      brackets: {\n        pattern: /\\[[^\\]]+\\]/,\n        inside: {\n          punctuation: /\\[|\\]/,\n          variable: /[\\s\\S]+/\n        }\n      },\n      punctuation: /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n      variable: /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n    };\n    Prism.hooks.add('before-tokenize', function (env) {\n      var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n      Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n    });\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n    });\n  })(Prism);\n}","map":{"version":3,"sources":["C:/Users/aaron/Documents/final-final-lyncovid-frontend/new-lynbrook-frontend/node_modules/refractor/lang/handlebars.js"],"names":["refractorMarkupTemplating","require","module","exports","handlebars","displayName","aliases","Prism","register","languages","comment","delimiter","pattern","alias","string","number","boolean","block","lookbehind","brackets","inside","punctuation","variable","hooks","add","env","handlebarsPattern","buildPlaceholders","tokenizePlaceholders"],"mappings":"AAAA;;AACA,IAAIA,yBAAyB,GAAGC,OAAO,CAAC,wBAAD,CAAvC;;AACAC,MAAM,CAACC,OAAP,GAAiBC,UAAjB;AACAA,UAAU,CAACC,WAAX,GAAyB,YAAzB;AACAD,UAAU,CAACE,OAAX,GAAqB,EAArB;;AACA,SAASF,UAAT,CAAoBG,KAApB,EAA2B;AACzBA,EAAAA,KAAK,CAACC,QAAN,CAAeR,yBAAf;;AACC,GAAC,UAASO,KAAT,EAAgB;AAChBA,IAAAA,KAAK,CAACE,SAAN,CAAgBL,UAAhB,GAA6B;AAC3BM,MAAAA,OAAO,EAAE,mBADkB;AAE3BC,MAAAA,SAAS,EAAE;AACTC,QAAAA,OAAO,EAAE,oBADA;AAETC,QAAAA,KAAK,EAAE;AAFE,OAFgB;AAM3BC,MAAAA,MAAM,EAAE,kCANmB;AAO3BC,MAAAA,MAAM,EAAE,4DAPmB;AAQ3BC,MAAAA,OAAO,EAAE,oBARkB;AAS3BC,MAAAA,KAAK,EAAE;AACLL,QAAAA,OAAO,EAAE,uCADJ;AAELM,QAAAA,UAAU,EAAE,IAFP;AAGLL,QAAAA,KAAK,EAAE;AAHF,OAToB;AAc3BM,MAAAA,QAAQ,EAAE;AACRP,QAAAA,OAAO,EAAE,YADD;AAERQ,QAAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAE,OADP;AAENC,UAAAA,QAAQ,EAAE;AAFJ;AAFA,OAdiB;AAqB3BD,MAAAA,WAAW,EAAE,mCArBc;AAsB3BC,MAAAA,QAAQ,EAAE;AAtBiB,KAA7B;AAwBAf,IAAAA,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgB,iBAAhB,EAAmC,UAASC,GAAT,EAAc;AAC/C,UAAIC,iBAAiB,GAAG,wCAAxB;AACAnB,MAAAA,KAAK,CAACE,SAAN,CAAgB,mBAAhB,EAAqCkB,iBAArC,CACEF,GADF,EAEE,YAFF,EAGEC,iBAHF;AAKD,KAPD;AAQAnB,IAAAA,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgB,gBAAhB,EAAkC,UAASC,GAAT,EAAc;AAC9ClB,MAAAA,KAAK,CAACE,SAAN,CAAgB,mBAAhB,EAAqCmB,oBAArC,CACEH,GADF,EAEE,YAFF;AAID,KALD;AAMD,GAvCA,EAuCElB,KAvCF;AAwCF","sourcesContent":["'use strict'\r\nvar refractorMarkupTemplating = require('./markup-templating.js')\r\nmodule.exports = handlebars\r\nhandlebars.displayName = 'handlebars'\r\nhandlebars.aliases = []\r\nfunction handlebars(Prism) {\r\n  Prism.register(refractorMarkupTemplating)\r\n  ;(function(Prism) {\r\n    Prism.languages.handlebars = {\r\n      comment: /\\{\\{![\\s\\S]*?\\}\\}/,\r\n      delimiter: {\r\n        pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\r\n        alias: 'punctuation'\r\n      },\r\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\r\n      boolean: /\\b(?:true|false)\\b/,\r\n      block: {\r\n        pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\r\n        lookbehind: true,\r\n        alias: 'keyword'\r\n      },\r\n      brackets: {\r\n        pattern: /\\[[^\\]]+\\]/,\r\n        inside: {\r\n          punctuation: /\\[|\\]/,\r\n          variable: /[\\s\\S]+/\r\n        }\r\n      },\r\n      punctuation: /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\r\n      variable: /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\r\n    }\r\n    Prism.hooks.add('before-tokenize', function(env) {\r\n      var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g\r\n      Prism.languages['markup-templating'].buildPlaceholders(\r\n        env,\r\n        'handlebars',\r\n        handlebarsPattern\r\n      )\r\n    })\r\n    Prism.hooks.add('after-tokenize', function(env) {\r\n      Prism.languages['markup-templating'].tokenizePlaceholders(\r\n        env,\r\n        'handlebars'\r\n      )\r\n    })\r\n  })(Prism)\r\n}\r\n"]},"metadata":{},"sourceType":"script"}