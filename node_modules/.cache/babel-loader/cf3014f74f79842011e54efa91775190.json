{"ast":null,"code":"module.exports = function (hljs) {\n  var ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_.]*(\\\\!|\\\\?)?';\n  var ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  var ELIXIR_KEYWORDS = 'and false then defined module in return redo retry end for true self when ' + 'next until do begin unless nil break not case cond alias while ensure or ' + 'include use alias fn quote require import with|0';\n  var SUBST = {\n    className: 'subst',\n    begin: '#\\\\{',\n    end: '}',\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [{\n      begin: /'/,\n      end: /'/\n    }, {\n      begin: /\"/,\n      end: /\"/\n    }]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'def defp defmacro',\n    end: /\\B\\b/,\n    // the mode is ended by the title\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      begin: ELIXIR_IDENT_RE,\n      endsParent: true\n    })]\n  };\n  var CLASS = hljs.inherit(FUNCTION, {\n    className: 'class',\n    beginKeywords: 'defimpl defmodule defprotocol defrecord',\n    end: /\\bdo\\b|$|;/\n  });\n  var ELIXIR_DEFAULT_CONTAINS = [STRING, hljs.HASH_COMMENT_MODE, CLASS, FUNCTION, {\n    begin: '::'\n  }, {\n    className: 'symbol',\n    begin: ':(?![\\\\s:])',\n    contains: [STRING, {\n      begin: ELIXIR_METHOD_RE\n    }],\n    relevance: 0\n  }, {\n    className: 'symbol',\n    begin: ELIXIR_IDENT_RE + ':(?!:)',\n    relevance: 0\n  }, {\n    className: 'number',\n    begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n    relevance: 0\n  }, {\n    className: 'variable',\n    begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))'\n  }, {\n    begin: '->'\n  }, {\n    // regexp container\n    begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n    contains: [hljs.HASH_COMMENT_MODE, {\n      className: 'regexp',\n      illegal: '\\\\n',\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      variants: [{\n        begin: '/',\n        end: '/[a-z]*'\n      }, {\n        begin: '%r\\\\[',\n        end: '\\\\][a-z]*'\n      }]\n    }],\n    relevance: 0\n  }];\n  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\n  return {\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS,\n    contains: ELIXIR_DEFAULT_CONTAINS\n  };\n};","map":{"version":3,"sources":["C:/Users/aaron/Documents/lyncovid19-frontend-vercel/node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/elixir.js"],"names":["module","exports","hljs","ELIXIR_IDENT_RE","ELIXIR_METHOD_RE","ELIXIR_KEYWORDS","SUBST","className","begin","end","lexemes","keywords","STRING","contains","BACKSLASH_ESCAPE","variants","FUNCTION","beginKeywords","inherit","TITLE_MODE","endsParent","CLASS","ELIXIR_DEFAULT_CONTAINS","HASH_COMMENT_MODE","relevance","RE_STARTERS_RE","illegal"],"mappings":"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","sourcesContent":["module.exports = function(hljs) {\r\n  var ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_.]*(\\\\!|\\\\?)?';\r\n  var ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\r\n  var ELIXIR_KEYWORDS =\r\n    'and false then defined module in return redo retry end for true self when ' +\r\n    'next until do begin unless nil break not case cond alias while ensure or ' +\r\n    'include use alias fn quote require import with|0';\r\n  var SUBST = {\r\n    className: 'subst',\r\n    begin: '#\\\\{', end: '}',\r\n    lexemes: ELIXIR_IDENT_RE,\r\n    keywords: ELIXIR_KEYWORDS\r\n  };\r\n  var STRING = {\r\n    className: 'string',\r\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\r\n    variants: [\r\n      {\r\n        begin: /'/, end: /'/\r\n      },\r\n      {\r\n        begin: /\"/, end: /\"/\r\n      }\r\n    ]\r\n  };\r\n  var FUNCTION = {\r\n    className: 'function',\r\n    beginKeywords: 'def defp defmacro', end: /\\B\\b/, // the mode is ended by the title\r\n    contains: [\r\n      hljs.inherit(hljs.TITLE_MODE, {\r\n        begin: ELIXIR_IDENT_RE,\r\n        endsParent: true\r\n      })\r\n    ]\r\n  };\r\n  var CLASS = hljs.inherit(FUNCTION, {\r\n    className: 'class',\r\n    beginKeywords: 'defimpl defmodule defprotocol defrecord', end: /\\bdo\\b|$|;/\r\n  });\r\n  var ELIXIR_DEFAULT_CONTAINS = [\r\n    STRING,\r\n    hljs.HASH_COMMENT_MODE,\r\n    CLASS,\r\n    FUNCTION,\r\n    {\r\n      begin: '::'\r\n    },\r\n    {\r\n      className: 'symbol',\r\n      begin: ':(?![\\\\s:])',\r\n      contains: [STRING, {begin: ELIXIR_METHOD_RE}],\r\n      relevance: 0\r\n    },\r\n    {\r\n      className: 'symbol',\r\n      begin: ELIXIR_IDENT_RE + ':(?!:)',\r\n      relevance: 0\r\n    },\r\n    {\r\n      className: 'number',\r\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\r\n      relevance: 0\r\n    },\r\n    {\r\n      className: 'variable',\r\n      begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))'\r\n    },\r\n    {\r\n      begin: '->'\r\n    },\r\n    { // regexp container\r\n      begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\r\n      contains: [\r\n        hljs.HASH_COMMENT_MODE,\r\n        {\r\n          className: 'regexp',\r\n          illegal: '\\\\n',\r\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\r\n          variants: [\r\n            {\r\n              begin: '/', end: '/[a-z]*'\r\n            },\r\n            {\r\n              begin: '%r\\\\[', end: '\\\\][a-z]*'\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      relevance: 0\r\n    }\r\n  ];\r\n  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\r\n\r\n  return {\r\n    lexemes: ELIXIR_IDENT_RE,\r\n    keywords: ELIXIR_KEYWORDS,\r\n    contains: ELIXIR_DEFAULT_CONTAINS\r\n  };\r\n};"]},"metadata":{},"sourceType":"script"}