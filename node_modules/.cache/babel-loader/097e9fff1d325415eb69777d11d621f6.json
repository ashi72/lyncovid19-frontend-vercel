{"ast":null,"code":"module.exports = function (hljs) {\n  var STRING = {\n    className: \"string\",\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [{\n      begin: \"'''\",\n      end: \"'''\",\n      relevance: 10\n    }, {\n      begin: '\"\"\"',\n      end: '\"\"\"',\n      relevance: 10\n    }, {\n      begin: '\"',\n      end: '\"'\n    }, {\n      begin: \"'\",\n      end: \"'\"\n    }]\n  };\n  return {\n    aliases: ['toml'],\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [hljs.COMMENT(';', '$'), hljs.HASH_COMMENT_MODE, {\n      className: 'section',\n      begin: /^\\s*\\[+/,\n      end: /\\]+/\n    }, {\n      begin: /^[a-z0-9\\[\\]_\\.-]+\\s*=\\s*/,\n      end: '$',\n      returnBegin: true,\n      contains: [{\n        className: 'attr',\n        begin: /[a-z0-9\\[\\]_\\.-]+/\n      }, {\n        begin: /=/,\n        endsWithParent: true,\n        relevance: 0,\n        contains: [hljs.COMMENT(';', '$'), hljs.HASH_COMMENT_MODE, {\n          className: 'literal',\n          begin: /\\bon|off|true|false|yes|no\\b/\n        }, {\n          className: 'variable',\n          variants: [{\n            begin: /\\$[\\w\\d\"][\\w\\d_]*/\n          }, {\n            begin: /\\$\\{(.*?)}/\n          }]\n        }, STRING, {\n          className: 'number',\n          begin: /([\\+\\-]+)?[\\d]+_[\\d_]+/\n        }, hljs.NUMBER_MODE]\n      }]\n    }]\n  };\n};","map":{"version":3,"sources":["C:/Users/aaron/Documents/final-final-lyncovid-frontend/new-lynbrook-frontend/node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/ini.js"],"names":["module","exports","hljs","STRING","className","contains","BACKSLASH_ESCAPE","variants","begin","end","relevance","aliases","case_insensitive","illegal","COMMENT","HASH_COMMENT_MODE","returnBegin","endsWithParent","NUMBER_MODE"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,MAAM,GAAG;AACXC,IAAAA,SAAS,EAAE,QADA;AAEXC,IAAAA,QAAQ,EAAE,CAACH,IAAI,CAACI,gBAAN,CAFC;AAGXC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,KADT;AACgBC,MAAAA,GAAG,EAAE,KADrB;AAEEC,MAAAA,SAAS,EAAE;AAFb,KADQ,EAIL;AACDF,MAAAA,KAAK,EAAE,KADN;AACaC,MAAAA,GAAG,EAAE,KADlB;AAEDC,MAAAA,SAAS,EAAE;AAFV,KAJK,EAOL;AACDF,MAAAA,KAAK,EAAE,GADN;AACWC,MAAAA,GAAG,EAAE;AADhB,KAPK,EASL;AACDD,MAAAA,KAAK,EAAE,GADN;AACWC,MAAAA,GAAG,EAAE;AADhB,KATK;AAHC,GAAb;AAiBA,SAAO;AACLE,IAAAA,OAAO,EAAE,CAAC,MAAD,CADJ;AAELC,IAAAA,gBAAgB,EAAE,IAFb;AAGLC,IAAAA,OAAO,EAAE,IAHJ;AAILR,IAAAA,QAAQ,EAAE,CACRH,IAAI,CAACY,OAAL,CAAa,GAAb,EAAkB,GAAlB,CADQ,EAERZ,IAAI,CAACa,iBAFG,EAGR;AACEX,MAAAA,SAAS,EAAE,SADb;AAEEI,MAAAA,KAAK,EAAE,SAFT;AAEoBC,MAAAA,GAAG,EAAE;AAFzB,KAHQ,EAOR;AACED,MAAAA,KAAK,EAAE,2BADT;AACsCC,MAAAA,GAAG,EAAE,GAD3C;AAEEO,MAAAA,WAAW,EAAE,IAFf;AAGEX,MAAAA,QAAQ,EAAE,CACR;AACED,QAAAA,SAAS,EAAE,MADb;AAEEI,QAAAA,KAAK,EAAE;AAFT,OADQ,EAKR;AACEA,QAAAA,KAAK,EAAE,GADT;AACcS,QAAAA,cAAc,EAAE,IAD9B;AAEEP,QAAAA,SAAS,EAAE,CAFb;AAGEL,QAAAA,QAAQ,EAAE,CACRH,IAAI,CAACY,OAAL,CAAa,GAAb,EAAkB,GAAlB,CADQ,EAERZ,IAAI,CAACa,iBAFG,EAGR;AACEX,UAAAA,SAAS,EAAE,SADb;AAEEI,UAAAA,KAAK,EAAE;AAFT,SAHQ,EAOR;AACEJ,UAAAA,SAAS,EAAE,UADb;AAEEG,UAAAA,QAAQ,EAAE,CACR;AAACC,YAAAA,KAAK,EAAE;AAAR,WADQ,EAER;AAACA,YAAAA,KAAK,EAAE;AAAR,WAFQ;AAFZ,SAPQ,EAcRL,MAdQ,EAeR;AACEC,UAAAA,SAAS,EAAE,QADb;AAEEI,UAAAA,KAAK,EAAE;AAFT,SAfQ,EAmBRN,IAAI,CAACgB,WAnBG;AAHZ,OALQ;AAHZ,KAPQ;AAJL,GAAP;AAgDD,CAlED","sourcesContent":["module.exports = function(hljs) {\r\n  var STRING = {\r\n    className: \"string\",\r\n    contains: [hljs.BACKSLASH_ESCAPE],\r\n    variants: [\r\n      {\r\n        begin: \"'''\", end: \"'''\",\r\n        relevance: 10\r\n      }, {\r\n        begin: '\"\"\"', end: '\"\"\"',\r\n        relevance: 10\r\n      }, {\r\n        begin: '\"', end: '\"'\r\n      }, {\r\n        begin: \"'\", end: \"'\"\r\n      }\r\n    ]\r\n  };\r\n  return {\r\n    aliases: ['toml'],\r\n    case_insensitive: true,\r\n    illegal: /\\S/,\r\n    contains: [\r\n      hljs.COMMENT(';', '$'),\r\n      hljs.HASH_COMMENT_MODE,\r\n      {\r\n        className: 'section',\r\n        begin: /^\\s*\\[+/, end: /\\]+/\r\n      },\r\n      {\r\n        begin: /^[a-z0-9\\[\\]_\\.-]+\\s*=\\s*/, end: '$',\r\n        returnBegin: true,\r\n        contains: [\r\n          {\r\n            className: 'attr',\r\n            begin: /[a-z0-9\\[\\]_\\.-]+/\r\n          },\r\n          {\r\n            begin: /=/, endsWithParent: true,\r\n            relevance: 0,\r\n            contains: [\r\n              hljs.COMMENT(';', '$'),\r\n              hljs.HASH_COMMENT_MODE,\r\n              {\r\n                className: 'literal',\r\n                begin: /\\bon|off|true|false|yes|no\\b/\r\n              },\r\n              {\r\n                className: 'variable',\r\n                variants: [\r\n                  {begin: /\\$[\\w\\d\"][\\w\\d_]*/},\r\n                  {begin: /\\$\\{(.*?)}/}\r\n                ]\r\n              },\r\n              STRING,\r\n              {\r\n                className: 'number',\r\n                begin: /([\\+\\-]+)?[\\d]+_[\\d_]+/\r\n              },\r\n              hljs.NUMBER_MODE\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n};"]},"metadata":{},"sourceType":"script"}