{"ast":null,"code":"var _jsxFileName = \"/Users/davidwang/Desktop/githubstuff/LynbrookCovid19App/src/components2/Select2.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport DateFilter from './DateFilter';\nimport StudentList from './StudentList';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  container: {\n    marginLeft: \"100px\",\n    marginRight: \"100px\",\n    marginBottom: \"100px\"\n  },\n  flexboxcontainer: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  }\n}));\nexport default function ControlledOpenSelect(props) {\n  const classes = useStyles();\n  const [status, setStatus] = useState('');\n  let filter = props.profiles.filter(student => student.gsx$currentstatus.$t.includes(status));\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    filter = props.profiles.filter(student => student.gsx$currentstatus.$t.includes(status));\n  }, [status]);\n\n  const handleChange = event => {\n    setStatus(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexboxcontainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-controlled-open-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-controlled-open-select-label\",\n    id: \"demo-controlled-open-select\",\n    open: open,\n    onClose: handleClose,\n    onOpen: handleOpen,\n    value: status,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"None\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Cleared\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Cleared\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Pending\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Uncleared\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Uncleared\")), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \" Sort by status \")), /*#__PURE__*/React.createElement(DateFilter, {\n    profiles: filter,\n    onSearch: props.onSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/davidwang/Desktop/githubstuff/LynbrookCovid19App/src/components2/Select2.js"],"names":["React","useState","useEffect","makeStyles","InputLabel","MenuItem","FormControl","Select","FormHelperText","DateFilter","StudentList","useStyles","theme","button","display","marginTop","spacing","formControl","margin","minWidth","container","marginLeft","marginRight","marginBottom","flexboxcontainer","flexDirection","ControlledOpenSelect","props","classes","status","setStatus","filter","profiles","student","gsx$currentstatus","$t","includes","open","setOpen","handleChange","event","target","value","handleClose","handleOpen","onSearch"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport DateFilter from './DateFilter';\nimport StudentList from './StudentList';\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  container: {\n    marginLeft: \"100px\",\n    marginRight: \"100px\",\n    marginBottom: \"100px\",\n  },\n  flexboxcontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  }\n}));\nexport default function ControlledOpenSelect(props) {\n  const classes = useStyles();\n  const [status, setStatus] = useState('');\n  let filter = props.profiles.filter( (student) => student.gsx$currentstatus.$t.includes(status))\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    filter = props.profiles.filter( (student) => student.gsx$currentstatus.$t.includes(status))\n  }, [status])\n  const handleChange = (event) => {\n    setStatus(event.target.value);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  return (\n      <div className = {classes.flexboxcontainer}>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Status</InputLabel>\n        <Select\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={status}\n          onChange={handleChange}\n        >\n          <MenuItem value=\"\">\n            None\n          </MenuItem>\n          <MenuItem value=\"Cleared\">Cleared</MenuItem>\n          <MenuItem value=\"Pending\">Pending</MenuItem>\n          <MenuItem value=\"Uncleared\">Uncleared</MenuItem>\n        </Select>\n        <FormHelperText> Sort by status </FormHelperText>\n      </FormControl>\n      <DateFilter profiles = {filter} onSearch = {props.onSearch}></DateFilter>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}