{"ast":null,"code":"'use strict';\n\nmodule.exports = wasm;\nwasm.displayName = 'wasm';\nwasm.aliases = [];\n\nfunction wasm(Prism) {\n  Prism.languages.wasm = {\n    comment: [/\\(;[\\s\\S]*?;\\)/, {\n      pattern: /;;.*/,\n      greedy: true\n    }],\n    string: {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      greedy: true\n    },\n    keyword: [{\n      pattern: /\\b(?:align|offset)=/,\n      inside: {\n        operator: /=/\n      }\n    }, {\n      pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n      inside: {\n        punctuation: /\\./\n      }\n    }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n    variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n    number: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n    punctuation: /[()]/\n  };\n}","map":{"version":3,"sources":["C:/Users/aaron/Documents/final-final-lyncovid-frontend/new-lynbrook-frontend/node_modules/refractor/lang/wasm.js"],"names":["module","exports","wasm","displayName","aliases","Prism","languages","comment","pattern","greedy","string","keyword","inside","operator","punctuation","variable","number"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AACAA,IAAI,CAACC,WAAL,GAAmB,MAAnB;AACAD,IAAI,CAACE,OAAL,GAAe,EAAf;;AACA,SAASF,IAAT,CAAcG,KAAd,EAAqB;AACnBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,IAAhB,GAAuB;AACrBK,IAAAA,OAAO,EAAE,CACP,gBADO,EAEP;AACEC,MAAAA,OAAO,EAAE,MADX;AAEEC,MAAAA,MAAM,EAAE;AAFV,KAFO,CADY;AAQrBC,IAAAA,MAAM,EAAE;AACNF,MAAAA,OAAO,EAAE,wBADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KARa;AAYrBE,IAAAA,OAAO,EAAE,CACP;AACEH,MAAAA,OAAO,EAAE,qBADX;AAEEI,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AAFV,KADO,EAOP;AACEL,MAAAA,OAAO,EAAE,gbADX;AAEEI,MAAAA,MAAM,EAAE;AACNE,QAAAA,WAAW,EAAE;AADP;AAFV,KAPO,EAaP,0QAbO,CAZY;AA2BrBC,IAAAA,QAAQ,EAAE,mCA3BW;AA4BrBC,IAAAA,MAAM,EAAE,iNA5Ba;AA6BrBF,IAAAA,WAAW,EAAE;AA7BQ,GAAvB;AA+BD","sourcesContent":["'use strict'\r\n\r\nmodule.exports = wasm\r\nwasm.displayName = 'wasm'\r\nwasm.aliases = []\r\nfunction wasm(Prism) {\r\n  Prism.languages.wasm = {\r\n    comment: [\r\n      /\\(;[\\s\\S]*?;\\)/,\r\n      {\r\n        pattern: /;;.*/,\r\n        greedy: true\r\n      }\r\n    ],\r\n    string: {\r\n      pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\r\n      greedy: true\r\n    },\r\n    keyword: [\r\n      {\r\n        pattern: /\\b(?:align|offset)=/,\r\n        inside: {\r\n          operator: /=/\r\n        }\r\n      },\r\n      {\r\n        pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\r\n        inside: {\r\n          punctuation: /\\./\r\n        }\r\n      },\r\n      /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/\r\n    ],\r\n    variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\r\n    number: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\r\n    punctuation: /[()]/\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}