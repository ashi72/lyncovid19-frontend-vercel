{"ast":null,"code":"module.exports = function (hljs) {\n  return {\n    contains: [hljs.HASH_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, {\n      begin: hljs.UNDERSCORE_IDENT_RE,\n      lexemes: hljs.UNDERSCORE_IDENT_RE,\n      keywords: {\n        // Stan's keywords\n        name: 'for in while repeat until if then else',\n        // Stan's probablity distributions (less beta and gamma, as commonly\n        // used for parameter names). So far, _log and _rng variants are not\n        // included\n        symbol: 'bernoulli bernoulli_logit binomial binomial_logit ' + 'beta_binomial hypergeometric categorical categorical_logit ' + 'ordered_logistic neg_binomial neg_binomial_2 ' + 'neg_binomial_2_log poisson poisson_log multinomial normal ' + 'exp_mod_normal skew_normal student_t cauchy double_exponential ' + 'logistic gumbel lognormal chi_square inv_chi_square ' + 'scaled_inv_chi_square exponential inv_gamma weibull frechet ' + 'rayleigh wiener pareto pareto_type_2 von_mises uniform ' + 'multi_normal multi_normal_prec multi_normal_cholesky multi_gp ' + 'multi_gp_cholesky multi_student_t gaussian_dlm_obs dirichlet ' + 'lkj_corr lkj_corr_cholesky wishart inv_wishart',\n        // Stan's data types\n        'selector-tag': 'int real vector simplex unit_vector ordered positive_ordered ' + 'row_vector matrix cholesky_factor_corr cholesky_factor_cov ' + 'corr_matrix cov_matrix',\n        // Stan's model blocks\n        title: 'functions model data parameters quantities transformed ' + 'generated',\n        literal: 'true false'\n      },\n      relevance: 0\n    }, // The below is all taken from the R language definition\n    {\n      // hex value\n      className: 'number',\n      begin: \"0[xX][0-9a-fA-F]+[Li]?\\\\b\",\n      relevance: 0\n    }, {\n      // hex value\n      className: 'number',\n      begin: \"0[xX][0-9a-fA-F]+[Li]?\\\\b\",\n      relevance: 0\n    }, {\n      // explicit integer\n      className: 'number',\n      begin: \"\\\\d+(?:[eE][+\\\\-]?\\\\d*)?L\\\\b\",\n      relevance: 0\n    }, {\n      // number with trailing decimal\n      className: 'number',\n      begin: \"\\\\d+\\\\.(?!\\\\d)(?:i\\\\b)?\",\n      relevance: 0\n    }, {\n      // number\n      className: 'number',\n      begin: \"\\\\d+(?:\\\\.\\\\d*)?(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\",\n      relevance: 0\n    }, {\n      // number with leading decimal\n      className: 'number',\n      begin: \"\\\\.\\\\d+(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\",\n      relevance: 0\n    }]\n  };\n};","map":{"version":3,"sources":["C:/Users/aaron/Documents/lyncovid19-frontend-vercel/node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/stan.js"],"names":["module","exports","hljs","contains","HASH_COMMENT_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","begin","UNDERSCORE_IDENT_RE","lexemes","keywords","name","symbol","title","literal","relevance","className"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,SAAO;AACLC,IAAAA,QAAQ,EAAE,CACRD,IAAI,CAACE,iBADG,EAERF,IAAI,CAACG,mBAFG,EAGRH,IAAI,CAACI,oBAHG,EAIR;AACEC,MAAAA,KAAK,EAAEL,IAAI,CAACM,mBADd;AAEEC,MAAAA,OAAO,EAAEP,IAAI,CAACM,mBAFhB;AAGEE,MAAAA,QAAQ,EAAE;AACR;AACAC,QAAAA,IAAI,EACF,wCAHM;AAIR;AACA;AACA;AACAC,QAAAA,MAAM,EACJ,uDACA,6DADA,GAEA,+CAFA,GAGA,4DAHA,GAIA,iEAJA,GAKA,sDALA,GAMA,8DANA,GAOA,yDAPA,GAQA,gEARA,GASA,+DATA,GAUA,gDAlBM;AAmBR;AACA,wBACE,kEACA,6DADA,GAEA,wBAvBM;AAwBR;AACAC,QAAAA,KAAK,EACH,4DACA,WA3BM;AA4BRC,QAAAA,OAAO,EACL;AA7BM,OAHZ;AAkCEC,MAAAA,SAAS,EAAE;AAlCb,KAJQ,EAwCR;AACA;AACE;AACAC,MAAAA,SAAS,EAAE,QAFb;AAGET,MAAAA,KAAK,EAAE,2BAHT;AAIEQ,MAAAA,SAAS,EAAE;AAJb,KAzCQ,EA+CR;AACE;AACAC,MAAAA,SAAS,EAAE,QAFb;AAGET,MAAAA,KAAK,EAAE,2BAHT;AAIEQ,MAAAA,SAAS,EAAE;AAJb,KA/CQ,EAqDR;AACE;AACAC,MAAAA,SAAS,EAAE,QAFb;AAGET,MAAAA,KAAK,EAAE,8BAHT;AAIEQ,MAAAA,SAAS,EAAE;AAJb,KArDQ,EA2DR;AACE;AACAC,MAAAA,SAAS,EAAE,QAFb;AAGET,MAAAA,KAAK,EAAE,yBAHT;AAIEQ,MAAAA,SAAS,EAAE;AAJb,KA3DQ,EAiER;AACE;AACAC,MAAAA,SAAS,EAAE,QAFb;AAGET,MAAAA,KAAK,EAAE,2CAHT;AAIEQ,MAAAA,SAAS,EAAE;AAJb,KAjEQ,EAuER;AACE;AACAC,MAAAA,SAAS,EAAE,QAFb;AAGET,MAAAA,KAAK,EAAE,kCAHT;AAIEQ,MAAAA,SAAS,EAAE;AAJb,KAvEQ;AADL,GAAP;AAgFD,CAjFD","sourcesContent":["module.exports = function(hljs) {\r\n  return {\r\n    contains: [\r\n      hljs.HASH_COMMENT_MODE,\r\n      hljs.C_LINE_COMMENT_MODE,\r\n      hljs.C_BLOCK_COMMENT_MODE,\r\n      {\r\n        begin: hljs.UNDERSCORE_IDENT_RE,\r\n        lexemes: hljs.UNDERSCORE_IDENT_RE,\r\n        keywords: {\r\n          // Stan's keywords\r\n          name:\r\n            'for in while repeat until if then else',\r\n          // Stan's probablity distributions (less beta and gamma, as commonly\r\n          // used for parameter names). So far, _log and _rng variants are not\r\n          // included\r\n          symbol:\r\n            'bernoulli bernoulli_logit binomial binomial_logit '               +\r\n            'beta_binomial hypergeometric categorical categorical_logit '      +\r\n            'ordered_logistic neg_binomial neg_binomial_2 '                    +\r\n            'neg_binomial_2_log poisson poisson_log multinomial normal '       +\r\n            'exp_mod_normal skew_normal student_t cauchy double_exponential '  +\r\n            'logistic gumbel lognormal chi_square inv_chi_square '             +\r\n            'scaled_inv_chi_square exponential inv_gamma weibull frechet '     +\r\n            'rayleigh wiener pareto pareto_type_2 von_mises uniform '          +\r\n            'multi_normal multi_normal_prec multi_normal_cholesky multi_gp '   +\r\n            'multi_gp_cholesky multi_student_t gaussian_dlm_obs dirichlet '    +\r\n            'lkj_corr lkj_corr_cholesky wishart inv_wishart',\r\n          // Stan's data types\r\n          'selector-tag':\r\n            'int real vector simplex unit_vector ordered positive_ordered '    +\r\n            'row_vector matrix cholesky_factor_corr cholesky_factor_cov '      +\r\n            'corr_matrix cov_matrix',\r\n          // Stan's model blocks\r\n          title:\r\n            'functions model data parameters quantities transformed '          +\r\n            'generated',\r\n          literal:\r\n            'true false'\r\n        },\r\n        relevance: 0\r\n      },\r\n      // The below is all taken from the R language definition\r\n      {\r\n        // hex value\r\n        className: 'number',\r\n        begin: \"0[xX][0-9a-fA-F]+[Li]?\\\\b\",\r\n        relevance: 0\r\n      },\r\n      {\r\n        // hex value\r\n        className: 'number',\r\n        begin: \"0[xX][0-9a-fA-F]+[Li]?\\\\b\",\r\n        relevance: 0\r\n      },\r\n      {\r\n        // explicit integer\r\n        className: 'number',\r\n        begin: \"\\\\d+(?:[eE][+\\\\-]?\\\\d*)?L\\\\b\",\r\n        relevance: 0\r\n      },\r\n      {\r\n        // number with trailing decimal\r\n        className: 'number',\r\n        begin: \"\\\\d+\\\\.(?!\\\\d)(?:i\\\\b)?\",\r\n        relevance: 0\r\n      },\r\n      {\r\n        // number\r\n        className: 'number',\r\n        begin: \"\\\\d+(?:\\\\.\\\\d*)?(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\",\r\n        relevance: 0\r\n      },\r\n      {\r\n        // number with leading decimal\r\n        className: 'number',\r\n        begin: \"\\\\.\\\\d+(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\",\r\n        relevance: 0\r\n      }\r\n    ]\r\n  };\r\n};"]},"metadata":{},"sourceType":"script"}